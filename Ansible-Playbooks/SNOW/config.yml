---
 - name: Configure SNOW on new cloud AIX/Linux servers
   hosts: NEW
   become: yes
   tasks:
     - name: Check the user id details
       user:
         name: infrnow
         group: nobody
         groups: infrnw,functids
         append: yes
         comment: Rekha Mishra

     - name: "Check if the home directory exist, if not create one and set right perms"
       file:
          path: /home/infrnow/.ssh
          state: directory
          owner: infrnow
          group: infrnw
          mode: '0700'

     - name: "Copy ssh key to server"
       copy:
          src: /home/ansible/Rekha-Playbooks/SNOW/authorized_keys
          dest: /home/infrnow/.ssh/authorized_keys
          owner: infrnow
          group: infrnw
          mode: '0600'

##Not adding sudoers template, as new cloud servers come with it by default"
      
     - name: "Take backup of sshd file"
       command: cp -p /etc/ssh/sshd_config /etc/ssh/sshd_config.bak.BeforeSNOWConfig

     - name: Check sshd parameter and change if diiferent
       lineinfile:
          path: /etc/ssh/sshd_config
          regexp: '^#Port 22'
          line: Port 22
     - name: Check protocal parameter
       lineinfile:
          path: /etc/ssh/sshd_config
          regexp: '^#Protocol 2'
          line: Protocol 2
     - name: Check RSAAuthentication paramater
       lineinfile:
          path: /etc/ssh/sshd_config
          regexp: '^#RSAAuthentication'
          line: RSAAuthentication yes
     - name: check Pubkey 
       lineinfile:
          path: /etc/ssh/sshd_config
          regexp: '^PubkeyAuthentication'
          line: PubkeyAuthentication yes
     - name: Check Authorizedkey
       lineinfile:
          path: /etc/ssh/sshd_config
          regexp: '^#AuthorizedKeysFile'
          line: AuthorizedKeysFile     .ssh/authorized_keys
##Note that there are some other parameters also, not listing here since new servers dont need it.
#1# cat /etc/ssh/sshd_config | grep -i Port 
#Port 22
##cat /etc/ssh/sshd_config | grep -i Protocol
#Protocol 2
## cat /etc/ssh/sshd_config | grep -i RSAAuthentication 
#RSAAuthentication yes
## cat /etc/ssh/sshd_config | grep -i PubkeyAuthentication
#PubkeyAuthentication yes
# cat /etc/ssh/sshd_config | grep -i AuthorizedKeysFile 
#AuthorizedKeysFile     .ssh/authorized_keys
# cat /etc/ssh/sshd_config | grep -i ChallengeResponseAuthentication
#ChallengeResponseAuthentication yes
# cat /etc/ssh/sshd_config | grep -i UseDNS
#UseDNS no

     - name: Start sshd
       service:
          name: sshd
          state: restarted

     - name: Get output of sshd
       shell: "grep -i Port /etc/ssh/sshd_config; grep -i Protocol /etc/ssh/sshd_config; grep -i RSAAuthentication  /etc/ssh/sshd_config; grep -i PubkeyAuthentication /etc/ssh/sshd_config; grep -i AuthorizedKeysFile /etc/ssh/sshd_config; grep -i ChallengeResponseAuthentication /etc/ssh/sshd_config; grep -i UseDNS /etc/ssh/sshd_config"
       register: sshd_values

     - name: Get sshd value
       debug:
         var: sshd_values.stdout_lines
